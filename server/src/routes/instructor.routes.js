"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var express_1 = require("express");
var instructorAuth_repository_1 = require("../repository/implementations/instructorAuth.repository");
var instructorAuth_controller_1 = require("../controllers/implementations/instructorAuth.controller");
var instructorAuth_services_1 = require("../services/implementation/instructorAuth.services");
var otp_repository_1 = require("../repository/implementations/otp.repository");
var instructorAuthRepository = new instructorAuth_repository_1.InstructorAuth();
var otpRepository = new otp_repository_1.OtpRepository();
var instructorAuthService = new instructorAuth_services_1.InstructorAuthSerivce(instructorAuthRepository, otpRepository);
var instructorAuthController = new instructorAuth_controller_1.InstructorAuthController(instructorAuthService);
var router = (0, express_1.Router)();
router.post("/register", instructorAuthController.signup.bind(instructorAuthController));
router.post("/login", instructorAuthController.signin.bind(instructorAuthController));
router.post("/verify-otp", instructorAuthController.verifyOtp.bind(instructorAuthController));
router.post("/forgotpassword", instructorAuthController.forgotPassword.bind(instructorAuthController));
router.post("/reset-verify-otp", instructorAuthController.verifyForgotOtp.bind(instructorAuthController));
router.put("/resetpassword", instructorAuthController.resetPassword.bind(instructorAuthController));
router.post("/resend-otp", instructorAuthController.resentOtp.bind(instructorAuthController));
exports.default = router;
