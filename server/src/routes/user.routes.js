"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var express_1 = require("express");
var auth_controller_1 = require("../controllers/implementations/auth.controller");
var auth_repository_1 = require("../repository/implementations/auth.repository");
var otp_repository_1 = require("../repository/implementations/otp.repository");
var auth_services_1 = require("../services/implementation/auth.services");
var passport_config_1 = require("../config/passport.config");
var authRepository = new auth_repository_1.AuthRepository();
var otpRepository = new otp_repository_1.OtpRepository();
var authService = new auth_services_1.AuthService(authRepository, otpRepository);
var authController = new auth_controller_1.Authcontroller(authService);
var router = (0, express_1.Router)();
router.post("/register", authController.signup.bind(authController));
router.post("/login", authController.signin.bind(authController));
router.post("/verify-otp", authController.verifyOtp.bind(authController));
router.post("/forgotpassword", authController.forgotPassword.bind(authController));
router.post("/reset-verify-otp", authController.verifyForgotOtp.bind(authController));
router.put("/resetpassword", authController.resetPassword.bind(authController));
router.post("/resend-otp", authController.resentOtp.bind(authController));
router.get("/auth/google", passport_config_1.default.authenticate("google", { scope: ["profile", "email"], session: false }));
router.get("/auth/google/callback", passport_config_1.default.authenticate("google", { failureRedirect: "/register", session: false }), authController.googleAuth.bind(authController));
exports.default = router;
